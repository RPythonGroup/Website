@misc{RN4,
   author = {Abadi, Martín and Agarwal, Ashish and Barham, Paul and Brevdo, Eugene and Chen, Zhifeng and Citro, Craig and Corrado, Greg S and Davis, Andy and Dean, Jeffrey and Devin, Matthieu},
   title = {TensorFlow: Large-scale machine learning on heterogeneous systems},
   publisher = {Mountain View, CA: Tensorflow},
   year = {2015},
   type = {Generic}
}

@article{RN6,
   author = {Cock, Peter JA and Antao, Tiago and Chang, Jeffrey T and Chapman, Brad A and Cox, Cymon J and Dalke, Andrew and Friedberg, Iddo and Hamelryck, Thomas and Kauff, Frank and Wilczynski, Bartek},
   title = {Biopython: freely available Python tools for computational molecular biology and bioinformatics},
   journal = {Bioinformatics},
   volume = {25},
   number = {11},
   pages = {1422},
   year = {2009},
   type = {Journal Article}
}

@misc{RN5,
   author = {KERAS},
   title = {Deep learning for humans},
   volume = {2024},
   number = {7th September},
   url = {https://keras.io/},
   year = {2024},
   type = {Web Page}
}

@article{RN3,
   author = {Mason, D},
   title = {Pydicom: An Open Source DICOM Library},
   journal = {Medical Physics},
   volume = {38},
   number = {6Part10},
   pages = {3493-3493},
   abstract = {Purpose: pydicom is an open source package for reading and writing DICOM files using the python programming language. Methods: pydicom was first publicly released in Oct 2008, and has since had five version releases. Pydicom is a pure python package, installing and running on any platform on which python runs. DICOM structures are read and parsed into python data types, with the values and full details of the data elements accessible. Pydicom is hosted on a google code website (http://pydicom.googlecode.com), in a Mercurial distributed version control system, and is released under an MIT license. The website has an active issues list for requesting features and reporting bugs, a wiki section documenting how to install and use the code, example files, and a test suite. Performance profiling of reading files was improved greatly in the 0.9.4 release. Profiling of the code was analysed to find code bottlenecks and rework the slower sections. Results: Pydicom can read and write all standard DICOM files, including nested sequences such as found in DICOM RT files or in structured reports. The code has approximately 1200 downloads per release, and about 80 subscribers in an online discussion group. It is an installable module in the pythonxy distribution, and is used by other open source projects such as dicompyler, DiPy and RadPy. Performance profiling yielded an approximate three-fold reading speed improvement, to approximately 3 seconds per hundred images, comparable to python file reading with no parsing. Conclusions: Pydicom is a mature library offering a reliable, simple reading and writing of DICOM files from python code. It has been actively developed over several years and has a solid base of users in imaging and therapy projects.},
   ISSN = {0094-2405},
   DOI = {https://doi.org/10.1118/1.3611983},
   url = {https://aapm.onlinelibrary.wiley.com/doi/abs/10.1118/1.3611983},
   year = {2011},
   type = {Journal Article}
}

@article{RN7,
   author = {McKinney, Wes and Team, PD},
   title = {Pandas-Powerful python data analysis toolkit},
   journal = {Pandas—Powerful Python Data Analysis Toolkit},
   volume = {1625},
   year = {2015},
   type = {Journal Article}
}

@misc{RN8,
   author = {Numpy_team},
   title = {NumPy: The fundamental package for scientific computing with Python},
   volume = {2024},
   number = {7th September},
   url = {https://numpy.org/},
   year = {2024},
   type = {Web Page}
}

@article{RN9,
   author = {Pedregosa, Fabian and Varoquaux, Gaël and Gramfort, Alexandre and Michel, Vincent and Thirion, Bertrand and Grisel, Olivier and Blondel, Mathieu and Prettenhofer, Peter and Weiss, Ron and Dubourg, Vincent},
   title = {Scikit-learn: Machine learning in Python},
   journal = {the Journal of machine Learning research},
   volume = {12},
   pages = {2825-2830},
   ISSN = {1532-4435},
   year = {2011},
   type = {Journal Article}
}

@misc{RN1,
   author = {Rossum, Guido van},
   title = {Foreword for "Programming Python"},
   volume = {2024},
   number = {7th September},
   url = {https://www.python.org/doc/essays/foreword/},
   year = {1996},
   type = {Web Page}
}

@misc{RN2,
   author = {Wikipedia},
   title = {History of Python},
   volume = {2024},
   number = {7th September},
   month = {26 August},
   url = {https://en.wikipedia.org/wiki/History_of_Python},
   year = {2024},
   type = {Web Page}
}

